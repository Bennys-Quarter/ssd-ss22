openapi: 3.0.0
info:
  description: |
    User API
  version: "1.0.0"
  title: User API
tags:
  - name: sensor
    description: All about sensors
  - name: actor
    description: All about switches
  - name: functions
    description: Operations
  - name: user
    description: Operations about user
paths:
  /sensor/{id}:
    get:
      tags: 
        - sensor
      parameters:
        - name: id
          in: path
          description: ID of IO
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'

        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
          
  /actor/{id}:
    get:
      tags: 
        - actor
      summary: Get the state current switch sate of the actor
      parameters:
        - name: id
          in: path
          description: ID of Actuator
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'

        '400':
          description: Invalid ID supplied
        '404':
          description: Actuator not found
  /actor/{id}/{state}:
    put:
      tags:
        - actor
      summary: Change the state of actor
      parameters: 
        - name: id
          in: path
          description: ID of Actuator
          required: true
          schema:
            type: string
        - name: state
          in: path
          description: State of Actuator
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: successfully set state
        '500':
          description: state operation not successful
        '404':
          description: id not found
  /actor/{id}/time:
    put:
      tags: 
        - actor
      summary: Set a switch time for an actor
      parameters: 
        - name: id
          in: path
          description: ID of Actuator
          required: true
          schema:
            type: string
        - name: time
          in: query
          description: set datime to switch actuator
          required: true
          schema: 
            type: integer
          
      responses:
        '200':
          description: Successfully set timer
        '404':
          description: ID not found
        
          
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        default:
          description: successful operation
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        petId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
          default: false
      xml:
        name: Order
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Data:
      type: object
      properties:
        status: 
          type: boolean
        

    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        usernam:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          format: int32
          description: User Status
      xml:
        name: User
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
    Actor:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        status: 
          type: boolean
          


servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Bennys-Quarter/UserAPI/1.0.0